<?php echo '<?php' . "\n"; ?>
namespace <?php echo $this->namespace; ?>\Hydrator;

use <?php echo $this->namespace; ?>\DataObject\<?php echo $this->entity_class; ?>DataObject;
use <?php echo $this->namespace; ?>\DataObject\<?php echo $this->entity_class; ?>Collection;
use <?php echo $this->entity_namespace; ?>\<?php echo $this->entity_class; ?>;

<?php 
    $length = str_repeat(' ', strlen('a' . $this->entity_class));
?>
class <?php echo $this->entity_class; ?>Hydrator
{
    /**
     * @param <?php echo $this->entity_class; ?> $entity
     * @param <?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>
     * @return <?php echo $this->entity_class; ?>DataObject
     */
    public function entityToPopo(<?php echo $this->entity_class; ?> $entity, <?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>)
    {
        $<?php echo $this->entity_class; ?> = clone $<?php echo $this->entity_class; ?>;

<?php foreach($this->fields as $field => $metadata): ?>
<?php if($metadata == reset($this->fields)): ?>
        $<?php echo $this->entity_class; ?>->set<?php echo $field; ?>($entity->get<?php echo $field; ?>())<?php echo "\n"; ?>
<?php else: ?>
        <?php echo $length; ?>->set<?php echo $field; ?>($entity->get<?php echo $field; ?>())<?php if($metadata == end($this->fields)): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php endif; ?>
<?php endforeach; ?>

       return $<?php echo $this->entity_class; ?>;
    }

    /**
     * @param <?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>
     * @param <?php echo $this->entity_class; ?> $entity
     * @return <?php echo $this->entity_class; ?>DataObject
     */
    public function popoToEntity(<?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>, <?php echo $this->entity_class; ?> $entity)
    {
<?php foreach($this->fields as $field => $metadata): ?>
<?php if($metadata == reset($this->fields)) continue;  ?>
        $entity->set<?php echo $field; ?>($<?php echo $this->entity_class; ?>->get<?php echo $field; ?>());<?php echo "\n"; ?>
<?php endforeach; ?>

       return $entity;
    }

    /**
     * @param array $entityCollection
     * @param <?php echo $this->entity_class; ?>Collection $dataObjectCollection
     * @param <?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>
     * @return <?php echo $this->entity_class; ?>Collection
     */
    public function entityCollectionToPopoCollection(array $entityCollection,
                                                    <?php echo $this->entity_class; ?>Collection $dataObjectCollection,
                                                    <?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>)
    {
        $dataObjectCollection = clone $dataObjectCollection;

        foreach($entityCollection as $entity) {
            $dataObjectCollection->append($this->entityToPopo($entity, $<?php echo $this->entity_class; ?>));
        }

        return $dataObjectCollection;
    }

    /**
     * @param <?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>
     * @param array $datas
     * @return array
     */
    public function popoToArray(<?php echo $this->entity_class; ?>DataObject $<?php echo $this->entity_class; ?>, $datas = array())
    {
<?php foreach($this->fields as $field => $metadata): ?>
<?php if(in_array($metadata['type'], array("date", "datetime"))): ?>
        $datas['<?php echo $field; ?>'] = $<?php echo $this->entity_class; ?>->get<?php echo $field; ?>()->format('Y-m-d');<?php echo "\n"; ?>
<?php else: ?>
        $datas['<?php echo $field; ?>'] = $<?php echo $this->entity_class; ?>->get<?php echo $field; ?>();<?php echo "\n"; ?>
<?php endif; ?>
<?php endforeach; ?>

       return $datas;
    }

    /**
     * @param array $datas
     * @param <?php echo $this->entity_class; ?>DataObject $dataObject
     */
    public function arrayToPopo(array $datas, <?php echo $this->entity_class; ?>DataObject $dataObject)
    {
        $dataObject = clone $dataObject;
<?php foreach($this->fields as $field => $metadata): ?>
<?php if($metadata == reset($this->fields)): ?>
        $dataObject->set<?php echo $field; ?>($datas['<?php echo $field; ?>'])<?php echo "\n"; ?>
<?php elseif(in_array($metadata['type'], array("date", "datetime"))): ?>
                   ->set<?php echo $field; ?>(new \DateTime($datas['<?php echo $field; ?>']))<?php if($metadata == end($this->fields)): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php else: ?>
                   ->set<?php echo $field; ?>($datas['<?php echo $field; ?>'])<?php if($metadata == end($this->fields)): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php endif; ?>
<?php endforeach; ?>

       return $dataObject;
    }
}