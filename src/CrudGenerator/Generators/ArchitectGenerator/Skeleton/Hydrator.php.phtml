<?php echo '<?php' . "\n"; ?>
namespace <?php echo $this->dataObject->getNamespace(); ?>\Hydrator;

use <?php echo $this->dataObject->getNamespace(); ?>\DataObject\<?php echo $this->dataObject->getEntityName(); ?>DataObject;
use <?php echo $this->dataObject->getNamespace(); ?>\DataObject\<?php echo $this->dataObject->getEntityName(); ?>Collection;
use <?php echo $this->dataObject->getEntity(); ?>;

<?php
    $length = str_repeat(' ', strlen('a' . $this->dataObject->getEntityName()));
?>
class <?php echo $this->dataObject->getEntityName(); ?>Hydrator
{
    /**
     * @param <?php echo $this->dataObject->getEntityName(); ?> $entity
     * @param <?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()) . "\n"; ?>
     * @return <?php echo $this->dataObject->getEntityName(); ?>DataObject
     */
    public function entityToPopo(<?php echo $this->dataObject->getEntityName(); ?> $entity, <?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()); ?>)
    {
        $<?php echo lcfirst($this->dataObject->getEntityName()); ?> = clone $<?php echo lcfirst($this->dataObject->getEntityName()); ?>;

<?php foreach($this->dataObject->getMetadata()->getColumnCollection() as $field => $metadata): ?>
<?php if($metadata == reset($this->dataObject->getMetadata()->getColumnCollection())): ?>
        $<?php echo lcfirst($this->dataObject->getEntityName()); ?>->set<?php echo ucfirst($metadata->getName()); ?>($entity->get<?php echo ucfirst($metadata->getName()); ?>())<?php echo "\n"; ?>
<?php else: ?>
        <?php echo $length; ?>->set<?php echo ucfirst($metadata->getName()); ?>($entity->get<?php echo ucfirst($metadata->getName()); ?>())<?php if($metadata == end($this->dataObject->getMetadata()->getColumnCollection())): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php endif; ?>
<?php endforeach; ?>

       return $<?php echo lcfirst($this->dataObject->getEntityName()); ?>;
    }

    /**
     * @param <?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()) . "\n"; ?>
     * @param <?php echo $this->dataObject->getEntityName(); ?> $entity
     * @return <?php echo $this->dataObject->getEntityName(); ?>DataObject
     */
    public function popoToEntity(<?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()); ?>, <?php echo $this->dataObject->getEntityName(); ?> $entity)
    {
<?php foreach($this->dataObject->getMetadata()->getColumnCollection() as $field => $metadata): ?>
<?php if($metadata == reset($this->dataObject->getMetadata()->getColumnCollection())) continue;  ?>
        $entity->set<?php echo ucfirst($metadata->getName()); ?>($<?php echo lcfirst($this->dataObject->getEntityName()); ?>->get<?php echo ucfirst($metadata->getName()); ?>());<?php echo "\n"; ?>
<?php endforeach; ?>

       return $entity;
    }

    /**
     * @param array $entityCollection
     * @param <?php echo $this->dataObject->getEntityName(); ?>Collection $dataObjectCollection
     * @param <?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()) . "\n"; ?>
     * @return <?php echo $this->dataObject->getEntityName(); ?>Collection
     */
    public function entityCollectionToPopoCollection(
        array $entityCollection,
        <?php echo $this->dataObject->getEntityName(); ?>Collection $dataObjectCollection,
        <?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()); ?>)
    {
        $dataObjectCollection = clone $dataObjectCollection;

        foreach($entityCollection as $entity) {
            $dataObjectCollection->append($this->entityToPopo($entity, $<?php echo lcfirst($this->dataObject->getEntityName()); ?>));
        }

        return $dataObjectCollection;
    }

    /**
     * @param <?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()) . "\n"; ?>
     * @param array $datas
     * @return array
     */
    public function popoToArray(<?php echo $this->dataObject->getEntityName(); ?>DataObject $<?php echo lcfirst($this->dataObject->getEntityName()); ?>, $datas = array())
    {
<?php foreach($this->dataObject->getMetadata()->getColumnCollection() as $field => $metadata): ?>
<?php if(in_array($metadata->getType(), array("date", "datetime"))): ?>
        $datas['<?php echo $metadata->getName(); ?>'] = $<?php echo lcfirst($this->dataObject->getEntityName()); ?>->get<?php echo ucfirst($metadata->getName()); ?>()->format('Y-m-d');<?php echo "\n"; ?>
<?php else: ?>
        $datas['<?php echo $metadata->getName(); ?>'] = $<?php echo lcfirst($this->dataObject->getEntityName()); ?>->get<?php echo ucfirst($metadata->getName()); ?>();<?php echo "\n"; ?>
<?php endif; ?>
<?php endforeach; ?>

       return $datas;
    }

    /**
     * @param array $datas
     * @param <?php echo $this->dataObject->getEntityName(); ?>DataObject $dataObject
     */
    public function arrayToPopo(array $datas, <?php echo $this->dataObject->getEntityName(); ?>DataObject $dataObject)
    {
        $dataObject = clone $dataObject;
<?php foreach($this->dataObject->getMetadata()->getColumnCollection() as $field => $metadata): ?>
<?php if($metadata == reset($this->dataObject->getMetadata()->getColumnCollection())): ?>
        $dataObject->set<?php echo ucfirst($metadata->getName()); ?>(isset($datas['<?php echo $metadata->getName(); ?>']) ? $datas['<?php echo $metadata->getName(); ?>'] : null)<?php echo "\n"; ?>
<?php elseif(in_array($metadata->getType(), array("date", "datetime"))): ?>
                   ->set<?php echo ucfirst($metadata->getName()); ?>(new \DateTime($datas['<?php echo $metadata->getName(); ?>']))<?php if($metadata == end($this->dataObject->getMetadata()->getColumnCollection())): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php else: ?>
                   ->set<?php echo ucfirst($metadata->getName()); ?>(isset($datas['<?php echo $metadata->getName(); ?>']) ? $datas['<?php echo $metadata->getName(); ?>'] : null)<?php if($metadata == end($this->dataObject->getMetadata()->getColumnCollection())): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php endif; ?>
<?php endforeach; ?>

       return $dataObject;
    }
}