<?php echo '<?php' . "\n"; ?>

namespace <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\DAOFactory;

use <?php echo $this->dataObject->getNamespace(); ?>\<?php echo $this->dataObject->getEntityName(); ?>DAOFactory;
use <?php echo $this->dataObject->getNamespace(); ?>\DAO\<?php echo $this->dataObject->getEntityName(); ?>DAO;
use <?php echo $this->unitTestNamespace; ?>\Bootstrap;

class getInstanceTest extends \PHPUnit_Framework_TestCase
{
    public function testReturnType()
    {
        $this->assertInstanceOf('<?php echo $this->dataObject->getNamespace(); ?>\DAO\<?php echo $this->dataObject->getEntityName(); ?>DAO', <?php echo $this->dataObject->getEntityName(); ?>DAOFactory::getInstance(Bootstrap::getServiceManager()));
    }

    public function testNoConstruct()
    {
        $class = new \ReflectionClass('<?php echo $this->dataObject->getNamespace(); ?>\<?php echo $this->dataObject->getEntityName(); ?>DAOFactory');
        $this->assertEquals(false, $class->isInstantiable());
    }
}

