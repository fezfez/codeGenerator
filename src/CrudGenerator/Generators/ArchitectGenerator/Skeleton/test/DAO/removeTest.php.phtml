<?php echo '<?php' . "\n"; ?>
namespace <?php echo $this->unitTestNamespace; ?>\DAO;

use <?php echo $this->fixtureNamespace; ?>;
use <?php echo $this->hydratorNamespace; ?>;
use <?php echo $this->dtoNamespace; ?>;
use <?php echo $this->daoNamespace; ?>;

class RemoveTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var <?php echo $this->fixtureName . "\n"; ?>
     */
    private $fixtureManager = null;

    protected function setUpBeforeClass()
    {
        $this->fixtureManager = new <?php echo $this->fixtureName; ?>();
    }

    protected function tearDownAfterClass()
    {
        $this->fixtureManager->purge();
    }

    protected function setUp()
    {
        $this->fixtureManager->purge();
    }

    public function testRemove()
    {
        $dtoPersisted = $this->fixtureManager->loadFixture();

        $sUT = new <?php echo $this->daoName; ?>(
            $this->fixtureManager->getDatabaseConnection(),
            new <?php echo $this->hydratorName; ?>()
        );

        $sUT->remove($dtoPersisted);

        $this->setExpectedException('<?php echo $this->exceptionNamespace; ?>');
        $sUT->find($dtoPersisted);
    }

    public function testRemoveFailed()
    {
        $sUT = new <?php echo $this->daoName; ?>($this->fixtureManager->getDatabaseConnection(), new <?php echo $this->hydratorName; ?>());
        $dto = new <?php echo $this->dataObjectName; ?>();

        $this->setExpectedException('<?php echo $this->exceptionNamespace; ?>');
        $sUT->remove($dto);
    }
}

