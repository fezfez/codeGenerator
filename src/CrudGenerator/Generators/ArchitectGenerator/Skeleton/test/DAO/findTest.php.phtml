<?php echo '<?php' . "\n"; ?>
namespace <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\DAO;

use ApplicationTest\FixtureManager;
use <?php echo $this->dataObject->getNamespace(); ?>\DAO\<?php echo $this->dataObject->getEntityName(); ?>DAO;
use <?php echo $this->dataObject->getNamespace(); ?>\DataObject\<?php echo $this->dataObject->getEntityName(); ?>DataObject;

class findTest extends \PHPUnit_Framework_TestCase
{
    public function testFind()
    {
        FixtureManager::purge();
        $em = FixtureManager::getEm();
        $fixture = new <?php echo $this->dataObject->getEntityName(); ?>Fixture();
        FixtureManager::loadFixtures($fixture);

        $entity = $fixture->entity;

        $dataObject = new <?php echo $this->dataObject->getEntityName(); ?>DataObject();
        $dataObject->setId($entity->getId());

        $<?php echo $this->dataObject->getEntityName(); ?>DAO = new <?php echo $this->dataObject->getEntityName(); ?>DAO($em);
        $<?php echo $this->dataObject->getEntityName(); ?>Data = $<?php echo $this->dataObject->getEntityName(); ?>DAO->find($dataObject);

        $this->assertEquals($entity->getId(), $<?php echo $this->dataObject->getEntityName(); ?>Data->getId());
        $this->assertInstanceOf('<?php echo $this->dataObject->getNamespace(); ?>\DataObject\<?php echo $this->dataObject->getEntityName(); ?>DataObject', $<?php echo $this->dataObject->getEntityName(); ?>Data);
    }

    public function testError()
    {
        FixtureManager::purge();
        $em = FixtureManager::getEm();
        FixtureManager::purge();

        $this->setExpectedException('<?php echo $this->dataObject->getNamespace(); ?>\No<?php echo $this->dataObject->getEntityName(); ?>Exception');

        $dataObject = new <?php echo $this->dataObject->getEntityName(); ?>DataObject();
        $dataObject->setId('10000');

        $<?php echo $this->dataObject->getEntityName(); ?>DAO = new <?php echo $this->dataObject->getEntityName(); ?>DAO($em);
        $<?php echo $this->dataObject->getEntityName(); ?>DAO->find($dataObject);
    }
}

