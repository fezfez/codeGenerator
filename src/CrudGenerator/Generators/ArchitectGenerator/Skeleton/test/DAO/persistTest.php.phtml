<?php
echo '<?php' . "\n";
?>
namespace <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\DAO;

use ApplicationTest\FixtureManager;
use <?php echo $this->hydratorNamespace; ?>;
use <?php echo $this->dtoNamespace; ?>;
use <?php echo $this->daoNamespace; ?>;
use <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\<?php echo $this->entityName; ?>Fixture;

class PersistTest extends \PHPUnit_Framework_TestCase
{
    public function testPersist()
    {
        FixtureManager::purge();
        $em = FixtureManager::getEm();

<?php

$keyTestable = array();
$keyToTest = null;
$columnCollection = $this->dataObject->getMetadata()->getColumnCollection(true);
foreach($columnCollection as $field => $metadata):
?>
        $<?php echo $metadata->getName(); ?> = <?php echo $this->getHelper('FixtureRenderer')->render($metadata); ?>;
<?php endforeach; ?>

        $dto = new <?php echo $this->dataObjectName; ?>();
        $dto<?php foreach($columnCollection as $field => $metadata):
if(null === $keyToTest) {
    $keyToTest = $metadata->getName();
}
?>
           ->set<?php echo ucfirst($metadata->getName()); ?>($<?php echo $metadata->getName(); ?>)<?php if($metadata == end($columnCollection)): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php endforeach; ?>

        $<?php echo $this->entityName; ?>DAO = new <?php echo $this->daoName; ?>(
            $em,
            new <?php echo $this->hydratorName; ?>()
        );
        $<?php echo $this->entityName; ?>DAO->persist($dto);

        $entity = $em->getRepository('<?php echo $this->dataObject->getEntity(); ?>')->findOneBy(array('<?php echo $keyToTest; ?>' => $<?php echo $keyToTest; ?>));

<?php
$columnCollection = $this->dataObject->getMetadata()->getColumnCollection(true);
foreach($columnCollection as $field => $metadata): ?>
        $this->assertEquals($<?php echo $metadata->getName(); ?>, $entity->get<?php echo ucfirst($metadata->getName()); ?>());
<?php endforeach; ?>
    }
}

