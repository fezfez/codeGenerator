<?php
echo '<?php' . "\n";
?>
namespace <?php echo $this->unitTestNamespace; ?>\DAO;

use <?php echo $this->fixtureNamespace; ?>;
use <?php echo $this->hydratorNamespace; ?>;
use <?php echo $this->dtoNamespace; ?>;
use <?php echo $this->daoNamespace; ?>;

class PersistTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var <?php echo $this->fixtureName . "\n"; ?>
     */
    private $fixtureManager = null;

    protected function setUpBeforeClass()
    {
        $this->fixtureManager = new <?php echo $this->fixtureName; ?>();
    }

    protected function tearDownAfterClass()
    {
        $this->fixtureManager->purge();
    }

    public function testPersist()
    {
        $dto = $this->fixtureManager->getFixture();

        $<?php echo $this->entityName; ?>DAO = new <?php echo $this->daoName; ?>(
            $this->fixtureManager->getDatabaseConnection(),
            new <?php echo $this->hydratorName; ?>()
        );
        $<?php echo $this->entityName; ?>DAO->persist($dto);

        $dtoRetrive = $suiviNewsDAO->find($dtoPersisted);

<?php
$columnCollection = $this->dataObject->getMetadata()->getColumnCollection(true);
foreach($columnCollection as $field => $metadata): ?>
        $this->assertEquals($dto->get<?php echo $metadata->getName(true); ?>(), $dtoRetrive->get<?php echo $metadata->getName(true); ?>());
<?php endforeach; ?>
    }
}

