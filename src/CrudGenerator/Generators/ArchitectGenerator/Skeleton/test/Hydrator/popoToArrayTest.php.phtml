<?php echo '<?php' . "\n"; ?>
namespace <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\Hydrator;

use ApplicationTest\FixtureManager;
use <?php echo $this->dataObject->getNamespace(); ?>\DAO\<?php echo $this->dataObject->getEntityName(); ?>DAO;
use <?php echo $this->dataObject->getNamespace(); ?>\DataObject\<?php echo $this->dataObject->getEntityName(); ?>DataObject;
use <?php echo $this->dataObject->getNamespace(); ?>\Hydrator\<?php echo $this->dataObject->getEntityName(); ?>Hydrator;
use <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\<?php echo $this->dataObject->getEntityName(); ?>Fixture;

<?php
    $loremIpsumGenerator = new \CrudGenerator\Generators\LoremIpsumGenerator();
?>
class PopoToArray extends \PHPUnit_Framework_TestCase
{
    public function testpopoToArray()
    {
<?php
$fixtureRender = (function($metadata) use($loremIpsumGenerator) {
    if($metadata->getType() == 'integer' || $metadata->getType() == 'float') {
        return rand(0, 50);
    } elseif($metadata->getType() == 'string') {
        return '"' . substr($loremIpsumGenerator->getContent($metadata->getLength(), 'plain'), 0, $metadata->getLength()) . '"';
    } elseif($metadata->getType() == 'date') {
        return 'new DateTime()';
    } elseif($metadata->getType() == 'bool') {
        return 'true';
    }
});

$keyTestable = array();
$columnCollection = $this->dataObject->getMetadata()->getColumnCollection();
foreach($columnCollection as $field => $metadata):
/*if(isset($metadata['id']) && $metadata['id'] == true) {
    continue;
}*/
$keyToTest = null;
$modifiedValue = $fixtureRender($metadata);
?>
        $<?php echo $metadata->getName(); ?> = <?php echo $fixtureRender($metadata); ?>;
<?php endforeach; ?>

        $dto = new <?php echo $this->dataObject->getEntityName(); ?>DataObject();
        $dto<?php
        $columnCollection = $this->dataObject->getMetadata()->getColumnCollection();
        foreach($columnCollection as $field => $metadata): ?>
<?php
/*
if(isset($metadata['id']) && $metadata['id'] == true) {
    continue;
}*/
if(null === $keyToTest) {
    $keyToTest = $metadata->getName();
}
?>
           ->set<?php echo ucfirst($metadata->getName()); ?>($<?php echo $metadata->getName(); ?>)<?php if($metadata == end($columnCollection)): ?>;<?php endif; ?><?php echo "\n"; ?>
<?php endforeach; ?>

       $hydrator = new <?php echo $this->dataObject->getEntityName(); ?>Hydrator();
       $arrayDto = $hydrator->popoToArray($dto, array());

<?php
$columnCollection = $this->dataObject->getMetadata()->getColumnCollection();
foreach($columnCollection as $field => $metadata): ?>
<?php
/*
if(isset($metadata['id']) && $metadata['id'] == true) {
    continue;
}*/
?>
        $this->assertEquals($<?php echo $metadata->getName(); ?>, $arrayDto['<?php echo $metadata->getName(); ?>']);
<?php endforeach; ?>
    }
}

