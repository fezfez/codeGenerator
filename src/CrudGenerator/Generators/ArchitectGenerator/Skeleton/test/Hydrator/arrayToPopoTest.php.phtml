<?php echo '<?php' . "\n"; ?>
namespace <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\Hydrator;

use ApplicationTest\FixtureManager;
use <?php echo $this->dataObject->getNamespace(); ?>\DAO\<?php echo $this->dataObject->getEntityName(); ?>DAO;
use <?php echo $this->dataObject->getNamespace(); ?>\DataObject\<?php echo $this->dataObject->getEntityName(); ?>DataObject;
use <?php echo $this->dataObject->getNamespace(); ?>\Hydrator\<?php echo $this->dataObject->getEntityName(); ?>Hydrator;
use <?php echo $this->unitTestNamespace; ?>\<?php echo $this->dataObject->getNamespace(); ?>\<?php echo $this->dataObject->getEntityName(); ?>Fixture;

class arrayToPopoTest extends \PHPUnit_Framework_TestCase
{
    public function testArrayToPopo()
    {
        $arrayDto = array();
<?php

$keyTestable = array();
$columnCollection = $this->dataObject->getMetadata()->getColumnCollection(true);
foreach($columnCollection as $field => $metadata):
$keyToTest = null;
$modifiedValue = $this->getHelper('FixtureRenderer')->render($metadata);
?>
        $arrayDto['<?php echo $metadata->getName(); ?>'] = <?php echo $this->getHelper('FixtureRenderer')->render($metadata); ?>;
<?php endforeach; ?>

        $hydrator = new <?php echo $this->dataObject->getEntityName(); ?>Hydrator();
        $dto = $hydrator->arrayToPopo($arrayDto, new <?php echo $this->dataObject->getEntityName(); ?>DataObject());

<?php
$columnCollection = $this->dataObject->getMetadata()->getColumnCollection(true);
foreach($columnCollection as $field => $metadata):
?>
        $this->assertEquals($dto->get<?php echo ucfirst($metadata->getName()); ?>(), $arrayDto['<?php echo $metadata->getName(); ?>']);
<?php endforeach; ?>
    }
}

