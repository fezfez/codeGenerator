<?php echo '<?php' . "\n"; ?>
namespace <?php echo $this->formGenerator->getNamespace(); ?>;

use <?php echo $this->formGenerator->getNamespace(); ?>\Form\Abstract<?php echo $this->formGenerator->getEntityName(); ?>Form;
use <?php echo $this->formGenerator->getNamespace(); ?>\Form\<?php echo $this->formGenerator->getEntityName(); ?>Form;
use <?php echo $this->formGenerator->getNamespace(); ?>\Form\<?php echo $this->formGenerator->getEntityName(); ?>FormFilter;
use Zend\Stdlib\Hydrator\ClassMethods;
use Zend\Form\View\Helper\Form;
use Zend\ServiceManager\ServiceManager;

class <?php echo $this->formGenerator->getEntityName(); ?>FormFactory
{
    /**
     * @return Abstract<?php echo $this->formGenerator->getEntityName(); ?>Form
     */
    public static function getInstance(ServiceManager $serviceManager)
    {
        $router = $serviceManager->get('router');

        $form = new <?php echo $this->formGenerator->getEntityName(); ?>Form();
        $form->setInputFilter(new <?php echo $this->formGenerator->getEntityName(); ?>FormFilter());

        return new Abstract<?php echo $this->formGenerator->getEntityName(); ?>Form(
            $form,
            new ClassMethods(),
            new Form(),
            $router
        );
    }
}
