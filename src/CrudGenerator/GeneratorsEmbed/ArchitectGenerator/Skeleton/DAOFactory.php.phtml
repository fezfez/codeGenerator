<?php echo '<?php' . "\n";
$databaseConnectorVariableName = $this->renderFile(__DIR__ . '/environnement/' . $this->architectGenerator->getEnvironnement('backend') . '/variableName.phtml');
?>

namespace <?php echo $this->architectGenerator->getNamespace(); ?>;

use <?php echo $this->renderFile(__DIR__ . '/environnement/' . $this->architectGenerator->getEnvironnement('backend') . '/fullClass.phtml'); ?>;
<?php echo $this->renderFile(__DIR__ . '/environnement/' . $this->architectGenerator->getEnvironnement('framework') . '/fullClass.phtml'); ?>
use <?php echo $this->hydratorNamespace; ?>;
use <?php echo $this->daoNamespace; ?>;

class <?php echo $this->daoFactoryName . "\n"; ?>
{
    /**
     * @return <?php echo $this->daoNamespace . "\n"; ?>
     */
    public static function getInstance(<?php echo $this->renderFile(__DIR__ . '/environnement/' . $this->architectGenerator->getEnvironnement('framework') . '/injectionInDependencie.phtml'); ?>)
    {
        $<?php echo $databaseConnectorVariableName; ?> = <?php echo $this->renderFile(__DIR__ . '/environnement/' . $this->architectGenerator->getEnvironnement('backend') . '/createInstance.phtml') . "\n"; ?>
        $hydrator      = new <?php echo $this->hydratorName; ?>();

        return new <?php echo $this->daoName; ?>(
            $<?php echo $databaseConnectorVariableName; ?>,
            $hydrator
        );
    }
}
