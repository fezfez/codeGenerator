{
  "name": "ArchitectGenerator",
  "definition": "Generate DAO, DTO, Hydrator, Exception, unit test",
  "dto": "CrudGenerator\\GeneratorsEmbed\\ArchitectGenerator\\Architect",
  "metadataTypeAccepted": [
      "CrudGenerator\\MetaData\\DataObject\\MetaData"
  ],
  "environnement": {
    "framework": {
      "zend_framework_2": {
        "backend": [
          "PDO",
          "doctrine2"
        ],
        "template": [
          "phtml"
        ]
      },
      "symfony2": {
        "backend": [
          "doctrine2"
        ],
        "template": [
          "twig"
        ]
      }
    }
  },
  "questions": [
    {
      "dtoAttribute": "ModelDirectory",
      "text": "Chose a directory for model",
      "type": "directory"
    },
    {
      "dtoAttribute": "UnitTestDirectory",
      "text": "Chose a directory for unit test",
      "type": "directory"
    },
    {
      "dtoAttribute": "Namespace",
      "text": "Choose a target namespace",
      "responseType": "text"
    },
    {
      "dtoAttribute": "ServiceLayer",
      "text": "Add service layer",
      "responseType": "boolean"
    },
    {
      "dtoAttribute": "ModelName",
      "text": "Choose a model name",
      "defaultResponse": "{{ architectGenerator.getMetadata().getName() }}",
      "responseType": "text"
    },
    {
      "type": "askCollection",
      "collection": "$architectGenerator->getMetadata()->getColumnCollection()",
      "text": "Attribute name for \"%s\", $iteration->getName()",
      "origine": "$iteration->getName()",
      "dtoAttribute": "AttributeName",
      "responseType": "text",
      "defaultResponse": "$iteration->getName()"
    },
    {
      "type": "askCollection",
      "collection": "$architectGenerator->getMetadata()->getColumnCollection()",
      "text": "Add \"%s\" to DTO, $iteration->getName()",
      "origine": "$iteration->getName()",
      "dtoAttribute": "ColumnUsed",
      "responseType": "boolean",
      "defaultResponse": 1
    },
    {
      "type": "askCollection",
      "collection": "$architectGenerator->getMetadata()->getRelationCollection()",
      "text": "Attribute name for \"%s\", $iteration->getName()",
      "origine": "$iteration->getName()",
      "dtoAttribute": "RelationRenamed",
      "responseType": "text",
      "defaultResponse": "$iteration->getName()"
    },
    {
      "type": "askCollectionOverIterator",
      "collection": "$architectGenerator->getMetadata()->getRelationCollection()",
      "text": "Deal the relation with \"%s\", $iteration->getFullName()",
      "origine": "$iteration->getFullName()",
      "dtoAttribute": "RelationBehavior",
      "responseType": "text",
      "defaultResponse": "ADD_TO_DTO",
      "predefinedResponse": {
        "ADD_TO_DTO": "Include \"%s\" attribute from \"%s\" to DTO ', $iteration->getFullName(), $iteration->getName()"
      }
    }
  ],
  "directories": [
    "{{ architectGenerator.getModelDirectory() }}/DAO/",
    "{{ architectGenerator.getModelDirectory() }}/Hydrator/",
    "{{ architectGenerator.getModelDirectory() }}/DataObject/",
    "{{ architectGenerator.getUnitTestDirectory() ~ daoFactoryName }}",
    "{{ architectGenerator.getUnitTestDirectory() ~ daoName }}"
  ],
  "templateVariables": [
    {
      "modelName": "{{ architectGenerator.getModelName()|capitalize }}"
    },
    {
      "ucFirstModelName": "{{ architectGenerator.getModelName()|capitalize }}"
    },
    {
      "hydratorName": "{{ ucFirstModelName }}Hydrator"
    },
    {
      "dataObjectName": "{{ ucFirstModelName }}DataObject"
    },
    {
      "collectionName": "{{ ucFirstModelName }}Collection"
    },
    {
      "daoName": "{{ ucFirstModelName }}DAO"
    },
    {
      "daoFactoryName": "{{ ucFirstModelName }}DAOFactory"
    },
    {
      "exceptionName": "No{{ ucFirstModelName }}Exception"
    },
    {
      "daoNamespace": "{{ architectGenerator.getNamespace() }}\\DAO\\{{ daoName }}"
    },
    {
      "daoFactoryNamespace": "{{ architectGenerator.getNamespace() }}\\{{ daoFactoryName }}"
    },
    {
      "dtoNamespace": "{{ architectGenerator.getNamespace() }}\\DataObject\\{{ dataObjectName }}"
    },
    {
      "hydratorNamespace": "{{ architectGenerator.getNamespace() }}\\Hydrator\\{{ hydratorName }}"
    },
    {
      "dtoCollectionNamespace": "{{ architectGenerator.getNamespace() }}\\DataObject\\{{ collectionName }}"
    },
    {
      "exceptionNamespace": "{{ architectGenerator.getNamespace() }}\\{{ exceptionName }}"
    },
    {
      "unitTestNamespace": "Tests\\{{ architectGenerator.getNamespace() }}"
    },
    {
      "fixtureName": "{{ ucFirstModelName }}Fixture"
    },
    {
      "fixtureFactoryName": "{{ ucFirstModelName }}FixtureFactory"
    },
    {
      "fixtureNamespace": "Tests\\{{ architectGenerator.getNamespace() }}\\{{ fixtureName }}"
    },
    {
      "fixtureFactoryNamespace": "Tests\\{{ architectGenerator.getNamespace() }}\\{{ fixtureFactoryName }}"
    }
  ],
  "filesList": [
    {
      "/Exception.php.phtml": "{{ architectGenerator.getModelDirectory() }}No{{ ucFirstModelName }}Exception.php"
    },
    {
      "/DAOFactory.php.phtml": "{{ architectGenerator.getModelDirectory() }}{{ ucFirstModelName }}DAOFactory.php"
    },
    {
      "/DAO.php.phtml": "{{ architectGenerator.getModelDirectory() }}DAO/{{ ucFirstModelName }}DAO.php"
    },
    {
      "/Hydrator.php.phtml": "{{ architectGenerator.getModelDirectory() }}Hydrator/{{ ucFirstModelName }}Hydrator.php"
    },
    {
      "/DataObject.php.phtml": "{{ architectGenerator.getModelDirectory() }}DataObject/{{ ucFirstModelName }}DataObject.php"
    },
    {
      "/DataObjectCollection.php.phtml": "{{ architectGenerator.getModelDirectory() }}DataObject/{{ ucFirstModelName }}Collection.php"
    },
    {
      "/test/Fixture.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ fixtureName }}.php"
    },
    {
      "/test/FixtureFactory.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ fixtureFactoryName }}.php"
    },
    {
      "/test/DAOFactory/getInstanceTest.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ daoFactoryName }}/GetInstanceTest.php"
    },
    {
      "/test/DAO/findTest.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ daoName }}/FindTest.php"
    },
    {
      "/test/DAO/findAllTest.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ daoName }}/FindAllTest.php"
    },
    {
      "/test/DAO/persistTest.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ daoName }}/PersitTest.php"
    },
    {
      "/test/DAO/modifyTest.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ daoName }}/ModifyTest.php"
    },
    {
      "/test/DAO/removeTest.php.phtml": "{{ architectGenerator.getUnitTestDirectory() ~ daoName }}/RemoveTest.php"
    }
  ]
}